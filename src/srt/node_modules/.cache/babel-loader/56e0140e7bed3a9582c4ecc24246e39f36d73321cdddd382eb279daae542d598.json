{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Animated, View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform } from 'react-native';\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, OUTLINE_MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP, MIN_DENSE_HEIGHT_OUTLINED, LABEL_PADDING_TOP_DENSE } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, calculateOutlinedIconAndAffixTopPosition, getOutlinedInputColors, getConstants } from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nconst TextInputOutlined = _ref => {\n  let {\n    disabled = false,\n    editable = true,\n    label,\n    error = false,\n    selectionColor: customSelectionColor,\n    cursorColor,\n    underlineColor: _underlineColor,\n    outlineColor: customOutlineColor,\n    activeOutlineColor,\n    outlineStyle,\n    textColor,\n    dense,\n    style,\n    theme,\n    render = props => /*#__PURE__*/React.createElement(NativeTextInput, props),\n    multiline = false,\n    parentState,\n    innerRef,\n    onFocus,\n    forceFocus,\n    onBlur,\n    onChangeText,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    onLeftAffixLayoutChange,\n    onRightAffixLayoutChange,\n    left,\n    right,\n    placeholderTextColor,\n    testID = 'text-input-outlined',\n    contentStyle,\n    ...rest\n  } = _ref;\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right\n  });\n  const {\n    colors,\n    isV3,\n    roundness\n  } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n  const {\n    INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT,\n    ADORNMENT_OFFSET\n  } = getConstants(isV3);\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors === null || colors === void 0 ? void 0 : colors.background,\n    textAlign,\n    ...viewStyle\n  } = StyleSheet.flatten(style) || {};\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight = lineHeightStyle || fontSize * 1.2;\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme\n  });\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n  const baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(_ref2 => {\n    let {\n      side,\n      type\n    } = _ref2;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.getConstants().isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  const minInputHeight = (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, paddingTop);\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  const pad = calculatePadding(paddingSettings);\n  const paddingOut = adjustPaddingOut({\n    ...paddingSettings,\n    pad\n  });\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n  const {\n    current: placeholderOpacityAnims\n  } = React.useRef([new Animated.Value(0), new Animated.Value(1)]);\n  const placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  const labelBackgroundColor = backgroundColor === 'transparent' ? theme.colors.background : backgroundColor;\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n  };\n  const minHeight = height || (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  const outlinedHeight = inputHeight + (!height ? dense ? densePaddingTop / 2 : paddingTop : 0);\n  const {\n    leftLayout,\n    rightLayout\n  } = parentState;\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset\n  });\n  const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig,\n    rightAffixWidth,\n    leftAffixWidth,\n    mode: 'outlined',\n    isV3\n  });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange\n  };\n  let adornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: {\n        ...font,\n        fontSize,\n        lineHeight,\n        fontWeight\n      },\n      visible: parentState.labeled\n    };\n  }\n  return /*#__PURE__*/React.createElement(View, {\n    style: viewStyle\n  }, /*#__PURE__*/React.createElement(Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    label: label,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop,\n      minHeight\n    }]\n  }, label ? /*#__PURE__*/React.createElement(InputLabel, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps, {\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  })) : null, render === null || render === void 0 ? void 0 : render({\n    ...rest,\n    ref: innerRef,\n    onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    onFocus,\n    onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, {\n      ...font,\n      fontSize,\n      lineHeight,\n      fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n      minWidth: parentState.labelTextLayout.width + 2 * INPUT_PADDING_HORIZONTAL\n    }, Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID\n  })), /*#__PURE__*/React.createElement(TextInputAdornment, adornmentProps)));\n};\nexport default TextInputOutlined;\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","Animated","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","Outline","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","_ref","disabled","editable","label","error","selectionColor","customSelectionColor","cursorColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","createElement","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","contentStyle","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","lineHeightStyle","height","backgroundColor","background","textAlign","viewStyle","flatten","inputTextColor","activeColor","placeholderColor","errorColor","densePaddingTop","paddingTop","yOffset","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","current","placeholderOpacityAnims","useRef","Value","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","maxFontSizeMultiplier","opacity","value","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","minWidth","labelTextLayout","outline","create","paddingBottom","margin"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight = lineHeightStyle || fontSize * 1.2;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    paddingTop\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight + (!height ? (dense ? densePaddingTop / 2 : paddingTop) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        label={label}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop,\n              minHeight,\n            },\n          ]}\n        >\n          {label ? (\n            <InputLabel\n              labeled={parentState.labeled}\n              error={parentState.error}\n              focused={parentState.focused}\n              wiggle={Boolean(parentState.value && labelProps.labelError)}\n              labelLayoutMeasured={parentState.labelLayout.measured}\n              labelLayoutWidth={parentState.labelLayout.width}\n              {...labelProps}\n              labelBackground={LabelBackground}\n              maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n            />\n          ) : null}\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            editable: !disabled && editable,\n            selectionColor,\n            cursorColor:\n              typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n                minWidth:\n                  parentState.labelTextLayout.width +\n                  2 * INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n              contentStyle,\n            ],\n            testID,\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}