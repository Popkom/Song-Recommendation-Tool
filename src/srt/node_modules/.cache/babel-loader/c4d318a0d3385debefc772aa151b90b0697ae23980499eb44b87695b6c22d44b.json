{"ast":null,"code":"import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = _ref => {\n  let {\n    icon,\n    label,\n    active,\n    theme: themeOverrides,\n    rippleColor: customRippleColor,\n    style,\n    onPress,\n    accessibilityLabel,\n    right,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    roundness,\n    isV3\n  } = theme;\n  const backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : color(theme.colors.primary).alpha(0.12).rgb().string() : 'transparent';\n  const contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.68).rgb().string();\n  const labelMargin = icon ? isV3 ? 12 : 32 : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const rippleColor = isV3 ? color(contentColor).alpha(0.12).rgb().string() : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  return /*#__PURE__*/React.createElement(View, rest, /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor,\n      borderRadius\n    }, isV3 && styles.v3Container, style],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    rippleColor: customRippleColor || rippleColor,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.wrapper, isV3 && styles.v3Wrapper]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.content\n  }, icon ? /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, /*#__PURE__*/React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, {\n      color: contentColor,\n      marginLeft: labelMargin,\n      ...font\n    }]\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\nDrawerItem.displayName = 'Drawer.Item';\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default DrawerItem;","map":{"version":3,"names":["React","StyleSheet","View","color","useInternalTheme","Icon","TouchableRipple","Text","DrawerItem","_ref","icon","label","active","theme","themeOverrides","rippleColor","customRippleColor","style","onPress","accessibilityLabel","right","rest","roundness","isV3","backgroundColor","colors","secondaryContainer","primary","alpha","rgb","string","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","undefined","font","fonts","labelLarge","medium","createElement","borderless","styles","container","v3Container","accessibilityRole","accessibilityState","selected","wrapper","v3Wrapper","content","source","size","variant","selectable","numberOfLines","marginLeft","displayName","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Drawer\\DrawerItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme: themeOverrides,\n  rippleColor: customRippleColor,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const rippleColor = isV3\n    ? color(contentColor).alpha(0.12).rgb().string()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        rippleColor={customRippleColor || rippleColor}\n        theme={theme}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default DrawerItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}