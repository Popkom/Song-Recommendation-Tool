{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport AppbarContent from './AppbarContent';\nimport { DEFAULT_APPBAR_HEIGHT, getAppbarBackgroundColor, modeAppbarHeight, renderAppbarContent } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport Surface from '../Surface';\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more informations\n *\n * ## Usage\n * ### Top bar\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Appbar.Header>\n *     <Appbar.BackAction onPress={() => {}} />\n *     <Appbar.Content title=\"Title\" />\n *     <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n *     <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *   </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * ### Bottom bar\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Appbar, FAB, useTheme } from 'react-native-paper';\n * import { useSafeAreaInsets } from 'react-native-safe-area-context';\n *\n * const BOTTOM_APPBAR_HEIGHT = 80;\n * const MEDIUM_FAB_HEIGHT = 56;\n *\n * const MyComponent = () => {\n *   const { bottom } = useSafeAreaInsets();\n *   const theme = useTheme();\n *\n *   return (\n *     <Appbar\n *       style={[\n *         styles.bottom,\n *         {\n *           height: BOTTOM_APPBAR_HEIGHT + bottom,\n *           backgroundColor: theme.colors.elevation.level2,\n *         },\n *       ]}\n *       safeAreaInsets={{ bottom }}\n *     >\n *       <Appbar.Action icon=\"archive\" onPress={() => {}} />\n *       <Appbar.Action icon=\"email\" onPress={() => {}} />\n *       <Appbar.Action icon=\"label\" onPress={() => {}} />\n *       <Appbar.Action icon=\"delete\" onPress={() => {}} />\n *       <FAB\n *         mode=\"flat\"\n *         size=\"medium\"\n *         icon=\"plus\"\n *         onPress={() => {}}\n *         style={[\n *           styles.fab,\n *           { top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2 },\n *         ]}\n *       />\n *     </Appbar>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     backgroundColor: 'aquamarine',\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n *   fab: {\n *     position: 'absolute',\n *     right: 16,\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Appbar = _ref => {\n  let {\n    children,\n    dark,\n    style,\n    mode = 'small',\n    elevated,\n    safeAreaInsets,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3\n  } = theme;\n  const flattenedStyle = StyleSheet.flatten(style);\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? elevated ? 2 : 0 : 4,\n    ...restStyle\n  } = flattenedStyle || {};\n  const backgroundColor = getAppbarBackgroundColor(theme, elevation, customBackground, elevated);\n  const isMode = modeToCompare => {\n    return isV3 && mode === modeToCompare;\n  };\n  let isDark = false;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else if (!isV3) {\n    isDark = backgroundColor === 'transparent' ? false : typeof backgroundColor === 'string' ? !color(backgroundColor).isLight() : true;\n  }\n  const isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (!isV3 && Platform.OS === 'ios' || isV3CenterAlignedMode) {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n    React.Children.forEach(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  const filterAppbarActions = React.useCallback(function () {\n    let isLeading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return React.Children.toArray(children).filter(child =>\n    // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n    isLeading ? child.props.isLeading : !child.props.isLeading);\n  }, [children]);\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n  const insets = {\n    paddingBottom: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom,\n    paddingTop: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top,\n    paddingLeft: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left,\n    paddingRight: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right\n  };\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor\n    }, styles.appbar, {\n      height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT\n    }, insets, restStyle, !theme.isV3 && {\n      elevation\n    }],\n    elevation: elevation\n  }, rest), shouldAddLeftSpacing ? /*#__PURE__*/React.createElement(View, {\n    style: spacingStyle\n  }) : null, (!isV3 || isMode('small') || isMode('center-aligned')) && renderAppbarContent({\n    children,\n    isDark,\n    theme,\n    isV3,\n    shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent\n  }), (isMode('medium') || isMode('large')) && /*#__PURE__*/React.createElement(View, {\n    style: [styles.columnContainer, isMode('center-aligned') && styles.centerAlignedContainer]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.controlsRow\n  }, renderAppbarContent({\n    children,\n    isDark,\n    isV3,\n    renderOnly: ['Appbar.BackAction'],\n    mode\n  }), renderAppbarContent({\n    children: filterAppbarActions(true),\n    isDark,\n    isV3,\n    renderOnly: ['Appbar.Action'],\n    mode\n  }), /*#__PURE__*/React.createElement(View, {\n    style: styles.rightActionControls\n  }, renderAppbarContent({\n    children: filterAppbarActions(false),\n    isDark,\n    isV3,\n    renderExcept: ['Appbar', 'Appbar.BackAction', 'Appbar.Content', 'Appbar.Header'],\n    mode\n  }))), renderAppbarContent({\n    children,\n    isDark,\n    isV3,\n    renderOnly: ['Appbar.Content'],\n    mode\n  })), shouldAddRightSpacing ? /*#__PURE__*/React.createElement(View, {\n    style: spacingStyle\n  }) : null);\n};\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4\n  },\n  spacing: {\n    width: 48\n  },\n  v3Spacing: {\n    width: 52\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8\n  },\n  centerAlignedContainer: {\n    paddingTop: 0\n  }\n});\nexport default Appbar;\n\n// @component-docs ignore-next-line\nexport { Appbar };","map":{"version":3,"names":["React","Platform","StyleSheet","View","color","AppbarContent","DEFAULT_APPBAR_HEIGHT","getAppbarBackgroundColor","modeAppbarHeight","renderAppbarContent","useInternalTheme","Surface","Appbar","_ref","children","dark","style","mode","elevated","safeAreaInsets","theme","themeOverrides","rest","isV3","flattenedStyle","flatten","backgroundColor","customBackground","elevation","restStyle","isMode","modeToCompare","isDark","isLight","isV3CenterAlignedMode","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","filterAppbarActions","useCallback","isLeading","arguments","length","undefined","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","insets","paddingBottom","bottom","paddingTop","top","paddingLeft","left","paddingRight","right","createElement","_extends","appbar","height","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Appbar\\Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n  ColorValue,\n} from 'react-native';\n\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport {\n  AppbarModes,\n  DEFAULT_APPBAR_HEIGHT,\n  getAppbarBackgroundColor,\n  modeAppbarHeight,\n  renderAppbarContent,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { MD3Elevation, ThemeProp } from '../../types';\nimport Surface from '../Surface';\n\nexport type Props = Omit<\n  Partial<React.ComponentPropsWithRef<typeof View>>,\n  'style'\n> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * Safe area insets for the Appbar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   */\n  safeAreaInsets?: {\n    bottom?: number;\n    top?: number;\n    left?: number;\n    right?: number;\n  };\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more informations\n *\n * ## Usage\n * ### Top bar\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Appbar.Header>\n *     <Appbar.BackAction onPress={() => {}} />\n *     <Appbar.Content title=\"Title\" />\n *     <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n *     <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *   </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * ### Bottom bar\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Appbar, FAB, useTheme } from 'react-native-paper';\n * import { useSafeAreaInsets } from 'react-native-safe-area-context';\n *\n * const BOTTOM_APPBAR_HEIGHT = 80;\n * const MEDIUM_FAB_HEIGHT = 56;\n *\n * const MyComponent = () => {\n *   const { bottom } = useSafeAreaInsets();\n *   const theme = useTheme();\n *\n *   return (\n *     <Appbar\n *       style={[\n *         styles.bottom,\n *         {\n *           height: BOTTOM_APPBAR_HEIGHT + bottom,\n *           backgroundColor: theme.colors.elevation.level2,\n *         },\n *       ]}\n *       safeAreaInsets={{ bottom }}\n *     >\n *       <Appbar.Action icon=\"archive\" onPress={() => {}} />\n *       <Appbar.Action icon=\"email\" onPress={() => {}} />\n *       <Appbar.Action icon=\"label\" onPress={() => {}} />\n *       <Appbar.Action icon=\"delete\" onPress={() => {}} />\n *       <FAB\n *         mode=\"flat\"\n *         size=\"medium\"\n *         icon=\"plus\"\n *         onPress={() => {}}\n *         style={[\n *           styles.fab,\n *           { top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2 },\n *         ]}\n *       />\n *     </Appbar>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     backgroundColor: 'aquamarine',\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n *   fab: {\n *     position: 'absolute',\n *     right: 16,\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  mode = 'small',\n  elevated,\n  safeAreaInsets,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const flattenedStyle = StyleSheet.flatten(style);\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    ...restStyle\n  } = (flattenedStyle || {}) as Exclude<typeof flattenedStyle, number> & {\n    elevation?: number;\n    backgroundColor?: ColorValue;\n  };\n\n  const backgroundColor = getAppbarBackgroundColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  const isMode = (modeToCompare: AppbarModes) => {\n    return isV3 && mode === modeToCompare;\n  };\n\n  let isDark = false;\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else if (!isV3) {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  const isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if ((!isV3 && Platform.OS === 'ios') || isV3CenterAlignedMode) {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent &&\n      leftItemsCount < 2 &&\n      rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  const filterAppbarActions = React.useCallback(\n    (isLeading = false) =>\n      React.Children.toArray(children).filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        isLeading ? child.props.isLeading : !child.props.isLeading\n      ),\n    [children]\n  );\n\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n\n  const insets = {\n    paddingBottom: safeAreaInsets?.bottom,\n    paddingTop: safeAreaInsets?.top,\n    paddingLeft: safeAreaInsets?.left,\n    paddingRight: safeAreaInsets?.right,\n  };\n\n  return (\n    <Surface\n      style={[\n        { backgroundColor },\n        styles.appbar,\n        {\n          height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n        },\n        insets,\n        restStyle,\n        !theme.isV3 && { elevation },\n      ]}\n      elevation={elevation as MD3Elevation}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={spacingStyle} /> : null}\n      {(!isV3 || isMode('small') || isMode('center-aligned')) &&\n        renderAppbarContent({\n          children,\n          isDark,\n          theme,\n          isV3,\n          shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent,\n        })}\n      {(isMode('medium') || isMode('large')) && (\n        <View\n          style={[\n            styles.columnContainer,\n            isMode('center-aligned') && styles.centerAlignedContainer,\n          ]}\n        >\n          {/* Appbar top row with controls */}\n          <View style={styles.controlsRow}>\n            {/* Left side of row container, can contain AppbarBackAction or AppbarAction if it's leading icon  */}\n            {renderAppbarContent({\n              children,\n              isDark,\n              isV3,\n              renderOnly: ['Appbar.BackAction'],\n              mode,\n            })}\n            {renderAppbarContent({\n              children: filterAppbarActions(true),\n              isDark,\n              isV3,\n              renderOnly: ['Appbar.Action'],\n              mode,\n            })}\n            {/* Right side of row container, can contain other AppbarAction if they are not leading icons */}\n            <View style={styles.rightActionControls}>\n              {renderAppbarContent({\n                children: filterAppbarActions(false),\n                isDark,\n                isV3,\n                renderExcept: [\n                  'Appbar',\n                  'Appbar.BackAction',\n                  'Appbar.Content',\n                  'Appbar.Header',\n                ],\n                mode,\n              })}\n            </View>\n          </View>\n          {/* Middle of the row, can contain only AppbarContent */}\n          {renderAppbarContent({\n            children,\n            isDark,\n            isV3,\n            renderOnly: ['Appbar.Content'],\n            mode,\n          })}\n        </View>\n      )}\n      {shouldAddRightSpacing ? <View style={spacingStyle} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n  v3Spacing: {\n    width: 52,\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8,\n  },\n  centerAlignedContainer: {\n    paddingTop: 0,\n  },\n});\n\nexport default Appbar;\n\n// @component-docs ignore-next-line\nexport { Appbar };\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAEEC,QAAQ,EAERC,UAAU,EACVC,IAAI,QAGC,cAAc;AAErB,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAEEC,qBAAqB,EACrBC,wBAAwB,EACxBC,gBAAgB,EAChBC,mBAAmB,QACd,SAAS;AAChB,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,OAAO,MAAM,YAAY;AA6ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGC,IAAA,IASF;EAAA,IATG;IACdC,QAAQ;IACRC,IAAI;IACJC,KAAK;IACLC,IAAI,GAAG,OAAO;IACdC,QAAQ;IACRC,cAAc;IACdC,KAAK,EAAEC,cAAc;IACrB,GAAGC;EACE,CAAC,GAAAT,IAAA;EACN,MAAMO,KAAK,GAAGV,gBAAgB,CAACW,cAAc,CAAC;EAC9C,MAAM;IAAEE;EAAK,CAAC,GAAGH,KAAK;EACtB,MAAMI,cAAc,GAAGtB,UAAU,CAACuB,OAAO,CAACT,KAAK,CAAC;EAChD,MAAM;IACJU,eAAe,EAAEC,gBAAgB;IACjCC,SAAS,GAAGL,IAAI,GAAIL,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC;IACzC,GAAGW;EACL,CAAC,GAAIL,cAAc,IAAI,CAAC,CAGvB;EAED,MAAME,eAAe,GAAGnB,wBAAw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"},"metadata":{},"sourceType":"module","externalDependencies":[]}