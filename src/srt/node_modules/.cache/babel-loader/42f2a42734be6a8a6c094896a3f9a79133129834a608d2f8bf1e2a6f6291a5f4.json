{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Animated, I18nManager, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText(_ref) {\n  let {\n    style,\n    theme: themeOverrides,\n    variant,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  if (theme.isV3 && variant) {\n    const font = theme.fonts[variant];\n    if (typeof font !== 'object') {\n      throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);\n    }\n    return /*#__PURE__*/React.createElement(Animated.Text, _extends({}, rest, {\n      style: [font, styles.text, {\n        writingDirection,\n        color: theme.colors.onSurface\n      }, style]\n    }));\n  } else {\n    const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    };\n    return /*#__PURE__*/React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styles.text, textStyle, {\n        writingDirection\n      }, style]\n    }));\n  }\n}\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport const customAnimatedText = () => AnimatedText;\nexport default AnimatedText;","map":{"version":3,"names":["React","Animated","I18nManager","StyleSheet","useInternalTheme","AnimatedText","_ref","style","theme","themeOverrides","variant","rest","writingDirection","getConstants","isRTL","isV3","font","fonts","Error","Object","keys","join","createElement","Text","_extends","styles","text","color","colors","onSurface","regular","bodyMedium","textStyle","create","textAlign","customAnimatedText"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Typography\\AnimatedText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, I18nManager, StyleSheet, TextStyle } from 'react-native';\n\nimport type { VariantProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\ntype Props<T> = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  /**\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  style?: TextStyle;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText({\n  style,\n  theme: themeOverrides,\n  variant,\n  ...rest\n}: Props<never>) {\n  const theme = useInternalTheme(themeOverrides);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  if (theme.isV3 && variant) {\n    const font = theme.fonts[variant];\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          font,\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          style,\n        ]}\n      />\n    );\n  } else {\n    const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text,\n    };\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          styles.text,\n          textStyle,\n          {\n            writingDirection,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport const customAnimatedText = <T,>() =>\n  AnimatedText as (props: Props<T>) => JSX.Element;\n\nexport default AnimatedText;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,QAAmB,cAAc;AAG3E,SAASC,gBAAgB,QAAQ,oBAAoB;AA0BrD;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAAC,IAAA,EAKJ;EAAA,IALK;IACpBC,KAAK;IACLC,KAAK,EAAEC,cAAc;IACrBC,OAAO;IACP,GAAGC;EACS,CAAC,GAAAL,IAAA;EACb,MAAME,KAAK,GAAGJ,gBAAgB,CAACK,cAAc,CAAC;EAC9C,MAAMG,gBAAgB,GAAGV,WAAW,CAACW,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG,KAAK;EAEzE,IAAIN,KAAK,CAACO,IAAI,IAAIL,OAAO,EAAE;IACzB,MAAMM,IAAI,GAAGR,KAAK,CAACS,KAAK,CAACP,OAAO,CAAC;IACjC,IAAI,OAAOM,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAIE,KAAK,CACZ,WAAUR,OAAQ,kDAAiDS,MAAM,CAACC,IAAI,CAC7EZ,KAAK,CAACS,KACR,CAAC,CAACI,IAAI,CAAC,IAAI,CAAE,GACf,CAAC;IACH;IAEA,oBACErB,KAAA,CAAAsB,aAAA,CAACrB,QAAQ,CAACsB,IAAI,EAAAC,QAAA,KACRb,IAAI;MACRJ,KAAK,EAAE,CACLS,IAAI,EACJS,MAAM,CAACC,IAAI,EACX;QAAEd,gBAAgB;QAAEe,KAAK,EAAEnB,KAAK,CAACoB,MAAM,CAACC;MAAU,CAAC,EACnDtB,KAAK;IACL,EACH,CAAC;EAEN,CAAC,MAAM;IACL,MAAMS,IAAI,GAAG,CAACR,KAAK,CAACO,IAAI,GAAGP,KAAK,CAACS,KAAK,CAACa,OAAO,GAAGtB,KAAK,CAACS,KAAK,CAACc,UAAU;IACvE,MAAMC,SAAS,GAAG;MAChB,GAAGhB,IAAI;MACPW,KAAK,EAAEnB,KAAK,CAACO,IAAI,GAAGP,KAAK,CAACoB,MAAM,CAACC,SAAS,GAAGrB,KAAK,CAACoB,MAAM,CAACF;IAC5D,CAAC;IACD,oBACE1B,KAAA,CAAAsB,aAAA,CAACrB,QAAQ,CAACsB,IAAI,EAAAC,QAAA,KACRb,IAAI;MACRJ,KAAK,EAAE,CACLkB,MAAM,CAACC,IAAI,EACXM,SAAS,EACT;QACEpB;MACF,CAAC,EACDL,KAAK;IACL,EACH,CAAC;EAEN;AACF;AAEA,MAAMkB,MAAM,GAAGtB,UAAU,CAAC8B,MAAM,CAAC;EAC/BP,IAAI,EAAE;IACJQ,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAChC9B,YAAgD;AAElD,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}