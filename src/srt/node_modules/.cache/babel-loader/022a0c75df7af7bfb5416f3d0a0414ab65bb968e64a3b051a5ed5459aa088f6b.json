{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = _ref => {\n  let {\n    theme: themeOverrides,\n    ...props\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? /*#__PURE__*/React.createElement(CheckboxIOS, _extends({}, props, {\n    theme: theme\n  })) : /*#__PURE__*/React.createElement(CheckboxAndroid, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };","map":{"version":3,"names":["React","Platform","CheckboxAndroid","CheckboxIOS","useInternalTheme","Checkbox","_ref","theme","themeOverrides","props","OS","createElement","_extends","CheckboxWithTheme"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Checkbox\\Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} theme={theme} />\n  ) : (\n    <CheckboxAndroid {...props} theme={theme} />\n  );\n};\n\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAgCC,QAAQ,QAAQ,cAAc;AAE9D,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB;AAkCrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGC,IAAA,IAAgD;EAAA,IAA/C;IAAEC,KAAK,EAAEC,cAAc;IAAE,GAAGC;EAAa,CAAC,GAAAH,IAAA;EAC1D,MAAMC,KAAK,GAAGH,gBAAgB,CAACI,cAAc,CAAC;EAC9C,OAAOP,QAAQ,CAACS,EAAE,KAAK,KAAK,gBAC1BV,KAAA,CAAAW,aAAA,CAACR,WAAW,EAAAS,QAAA,KAAKH,KAAK;IAAEF,KAAK,EAAEA;EAAM,EAAE,CAAC,gBAExCP,KAAA,CAAAW,aAAA,CAACT,eAAe,EAAAU,QAAA,KAAKH,KAAK;IAAEF,KAAK,EAAEA;EAAM,EAAE,CAC5C;AACH,CAAC;AAED,eAAeF,QAAQ;;AAEvB;AACA,MAAMQ,iBAAiB,GAAGR,QAAQ;AAClC;AACA,SAASQ,iBAAiB,IAAIR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}