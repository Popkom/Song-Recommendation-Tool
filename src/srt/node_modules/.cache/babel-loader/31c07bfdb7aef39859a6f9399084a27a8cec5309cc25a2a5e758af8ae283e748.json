{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n/**\n * A component to show a single cell inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\n\nconst DataTableCell = _ref => {\n  let {\n    children,\n    textStyle,\n    style,\n    numeric,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: textStyle,\n    numberOfLines: 1\n  }, children));\n};\nDataTableCell.displayName = 'DataTable.Cell';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"names":["React","StyleSheet","TouchableRipple","Text","DataTableCell","_ref","children","textStyle","style","numeric","rest","createElement","_extends","styles","container","right","numberOfLines","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\n\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  ...rest\n}: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text style={textStyle} numberOfLines={1}>\n      {children}\n    </Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,UAAU,QAKL,cAAc;AAGrB,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,IAAI,MAAM,oBAAoB;AAsBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGC,IAAA;EAAA,IAAC;IACrBC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,OAAO;IACP,GAAGC;EACE,CAAC,GAAAL,IAAA;EAAA,oBACNL,KAAA,CAAAW,aAAA,CAACT,eAAe,EAAAU,QAAA,KACVF,IAAI;IACRF,KAAK,EAAE,CAACK,MAAM,CAACC,SAAS,EAAEL,OAAO,IAAII,MAAM,CAACE,KAAK,EAAEP,KAAK;EAAE,iBAE1DR,KAAA,CAAAW,aAAA,CAACR,IAAI;IAACK,KAAK,EAAED,SAAU;IAACS,aAAa,EAAE;EAAE,GACtCV,QACG,CACS,CAAC;AAAA,CACnB;AAEDF,aAAa,CAACa,WAAW,GAAG,gBAAgB;AAE5C,MAAMJ,MAAM,GAAGZ,UAAU,CAACiB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EAEDN,KAAK,EAAE;IACLO,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAelB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}