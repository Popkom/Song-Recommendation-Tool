{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { StyleSheet, Text as NativeText } from 'react-native';\nimport { useInternalTheme } from '../../../core/theming';\nimport { forwardRef } from '../../../utils/forwardRef';\n// @component-group Typography\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text = (_ref, ref) => {\n  var _theme$fonts, _theme$colors;\n  let {\n    style,\n    theme: overrideTheme,\n    ...rest\n  } = _ref;\n  const root = React.useRef(null);\n  const theme = useInternalTheme(overrideTheme);\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: args => {\n      var _root$current;\n      return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(NativeText, _extends({}, rest, {\n    ref: root,\n    style: [{\n      ...(!theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular)),\n      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text\n    }, styles.text, style]\n  }));\n};\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default forwardRef(Text);","map":{"version":3,"names":["React","StyleSheet","Text","NativeText","useInternalTheme","forwardRef","_ref","ref","_theme$fonts","_theme$colors","style","theme","overrideTheme","rest","root","useRef","useImperativeHandle","setNativeProps","args","_root$current","current","createElement","_extends","isV3","fonts","regular","color","colors","onSurface","text","styles","create","textAlign"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Typography\\v2\\Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport type { MD2Theme } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport { forwardRef } from '../../../utils/forwardRef';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: MD2Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, theme: overrideTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  const theme = useInternalTheme(overrideTheme);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...(!theme.isV3 && theme.fonts?.regular),\n          color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default forwardRef(Text);\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAEEC,UAAU,EACVC,IAAI,IAAIC,UAAU,QAEb,cAAc;AAIrB,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,UAAU,QAAQ,2BAA2B;AAUtD;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMH,IAA+C,GAAGA,CAAAI,IAAA,EAEtDC,GAAG,KACA;EAAA,IAAAC,YAAA,EAAAC,aAAA;EAAA,IAFH;IAAEC,KAAK;IAAEC,KAAK,EAAEC,aAAa;IAAE,GAAGC;EAAY,CAAC,GAAAP,IAAA;EAG/C,MAAMQ,IAAI,GAAGd,KAAK,CAACe,MAAM,CAAoB,IAAI,CAAC;EAClD,MAAMJ,KAAK,GAAGP,gBAAgB,CAACQ,aAAa,CAAC;EAE7CZ,KAAK,CAACgB,mBAAmB,CAACT,GAAG,EAAE,OAAO;IACpCU,cAAc,EAAGC,IAAY;MAAA,IAAAC,aAAA;MAAA,QAAAA,aAAA,GAAKL,IAAI,CAACM,OAAO,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,cAAc,CAACC,IAAI,CAAC;IAAA;EACtE,CAAC,CAAC,CAAC;EAEH,oBACElB,KAAA,CAAAqB,aAAA,CAAClB,UAAU,EAAAmB,QAAA,KACLT,IAAI;IACRN,GAAG,EAAEO,IAAK;IACVJ,KAAK,EAAE,CACL;MACE,IAAI,CAACC,KAAK,CAACY,IAAI,MAAAf,YAAA,GAAIG,KAAK,CAACa,KAAK,cAAAhB,YAAA,uBAAXA,YAAA,CAAaiB,OAAO,EAAC;MACxCC,KAAK,EAAEf,KAAK,CAACY,IAAI,IAAAd,aAAA,GAAGE,KAAK,CAACgB,MAAM,cAAAlB,aAAA,uBAAZA,aAAA,CAAcmB,SAAS,GAAGjB,KAAK,CAACgB,MAAM,CAACE;IAC7D,CAAC,EACDC,MAAM,CAACD,IAAI,EACXnB,KAAK;EACL,EACH,CAAC;AAEN,CAAC;AAED,MAAMoB,MAAM,GAAG7B,UAAU,CAAC8B,MAAM,CAAC;EAC/BF,IAAI,EAAE;IACJG,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe3B,UAAU,CAACH,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}