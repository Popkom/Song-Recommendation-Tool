{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Animated, StyleSheet, useWindowDimensions } from 'react-native';\nimport { useInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport getContrastingColor from '../utils/getContrastingColor';\nconst defaultSize = 20;\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = _ref => {\n  var _theme$colors;\n  let {\n    children,\n    size = defaultSize,\n    style,\n    theme: themeOverrides,\n    visible = true,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    current: opacity\n  } = React.useRef(new Animated.Value(visible ? 1 : 0));\n  const {\n    fontScale\n  } = useWindowDimensions();\n  const isFirstRendering = React.useRef(true);\n  const {\n    animation: {\n      scale\n    }\n  } = theme;\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [visible, opacity, scale]);\n  const {\n    backgroundColor = theme.isV3 ? theme.colors.error : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.notification,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const textColor = theme.isV3 ? theme.colors.onError : getContrastingColor(backgroundColor, white, black);\n  const borderRadius = size / 2;\n  const paddingHorizontal = theme.isV3 ? 3 : 4;\n  return /*#__PURE__*/React.createElement(Animated.Text, _extends({\n    numberOfLines: 1,\n    style: [{\n      opacity,\n      backgroundColor,\n      color: textColor,\n      fontSize: size * 0.5,\n      ...(!theme.isV3 && theme.fonts.regular),\n      lineHeight: size / fontScale,\n      height: size,\n      minWidth: size,\n      borderRadius,\n      paddingHorizontal\n    }, styles.container, restStyle]\n  }, rest), children);\n};\nexport default Badge;\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","useWindowDimensions","useInternalTheme","black","white","getContrastingColor","defaultSize","Badge","_ref","_theme$colors","children","size","style","theme","themeOverrides","visible","rest","current","opacity","useRef","Value","fontScale","isFirstRendering","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","isV3","colors","error","notification","restStyle","flatten","textColor","onError","borderRadius","paddingHorizontal","createElement","Text","_extends","numberOfLines","color","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","textAlignVertical","overflow"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { ThemeProp } from '../types';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\nexport type Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme: themeOverrides,\n  visible = true,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { fontScale } = useWindowDimensions();\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const {\n    backgroundColor = theme.isV3\n      ? theme.colors.error\n      : theme.colors?.notification,\n    ...restStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = theme.isV3\n    ? theme.colors.onError\n    : getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  const paddingHorizontal = theme.isV3 ? 3 : 4;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...(!theme.isV3 && theme.fonts.regular),\n          lineHeight: size / fontScale,\n          height: size,\n          minWidth: size,\n          borderRadius,\n          paddingHorizontal,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default Badge;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}