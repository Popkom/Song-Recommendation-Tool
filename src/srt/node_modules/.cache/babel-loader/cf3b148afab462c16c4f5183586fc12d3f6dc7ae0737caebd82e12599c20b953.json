{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { Animated, Platform, View } from 'react-native';\nclass BottomNavigationRouteScreen extends React.Component {\n  render() {\n    const {\n      style,\n      index,\n      children,\n      visibility,\n      ...rest\n    } = this.props;\n\n    // On Web, the unfocused tab screens can still be clicked since they are transparent, but still there\n    // Hiding them with `display: none` makes sure that they won't receive clicks\n    // We only set it on Web since on native, react-native-pager-view's breaks due to layout changing\n    const display = Platform.OS === 'web' ? visibility === 0 ? 'none' : 'flex' : undefined;\n    return /*#__PURE__*/React.createElement(View, _extends({\n      testID: `RouteScreen: ${index}`,\n      style: [style, {\n        display\n      }]\n    }, rest), children);\n  }\n}\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);","map":{"version":3,"names":["React","Animated","Platform","View","BottomNavigationRouteScreen","Component","render","style","index","children","visibility","rest","props","display","OS","undefined","createElement","_extends","testID","createAnimatedComponent"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\BottomNavigationRouteScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, Platform, View, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  visibility?: 0 | 1 | Animated.AnimatedInterpolation<number>;\n  index: number;\n}\n\nclass BottomNavigationRouteScreen extends React.Component<Props> {\n  render(): JSX.Element {\n    const { style, index, children, visibility, ...rest } = this.props;\n\n    // On Web, the unfocused tab screens can still be clicked since they are transparent, but still there\n    // Hiding them with `display: none` makes sure that they won't receive clicks\n    // We only set it on Web since on native, react-native-pager-view's breaks due to layout changing\n    const display =\n      Platform.OS === 'web' ? (visibility === 0 ? 'none' : 'flex') : undefined;\n\n    return (\n      <View\n        testID={`RouteScreen: ${index}`}\n        style={[style, { display }]}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,QAAmB,cAAc;AAOlE,MAAMC,2BAA2B,SAASJ,KAAK,CAACK,SAAS,CAAQ;EAC/DC,MAAMA,CAAA,EAAgB;IACpB,MAAM;MAAEC,KAAK;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,UAAU;MAAE,GAAGC;IAAK,CAAC,GAAG,IAAI,CAACC,KAAK;;IAElE;IACA;IACA;IACA,MAAMC,OAAO,GACXX,QAAQ,CAACY,EAAE,KAAK,KAAK,GAAIJ,UAAU,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM,GAAIK,SAAS;IAE1E,oBACEf,KAAA,CAAAgB,aAAA,CAACb,IAAI,EAAAc,QAAA;MACHC,MAAM,EAAG,gBAAeV,KAAM,EAAE;MAChCD,KAAK,EAAE,CAACA,KAAK,EAAE;QAAEM;MAAQ,CAAC;IAAE,GACxBF,IAAI,GAEPF,QACG,CAAC;EAEX;AACF;AAEA,eAAeR,QAAQ,CAACkB,uBAAuB,CAACf,2BAA2B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}