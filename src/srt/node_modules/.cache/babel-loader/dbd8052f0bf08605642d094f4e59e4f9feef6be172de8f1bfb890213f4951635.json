{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\nimport Title from '../Typography/v2/Title';\n/**\n * A component to show a title in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = _ref => {\n  let {\n    children,\n    theme: themeOverrides,\n    style,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3,\n    colors,\n    fonts\n  } = theme;\n  const TextComponent = isV3 ? Text : Title;\n  const headerTextStyle = {\n    color: isV3 ? colors.onSurface : colors === null || colors === void 0 ? void 0 : colors.text,\n    ...(isV3 ? fonts.headlineSmall : {})\n  };\n  return /*#__PURE__*/React.createElement(TextComponent, _extends({\n    variant: \"headlineSmall\",\n    accessibilityRole: \"header\",\n    style: [styles.text, isV3 && styles.v3Text, headerTextStyle, style]\n  }, rest), children);\n};\nDialogTitle.displayName = 'Dialog.Title';\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default DialogTitle;\n\n// @component-docs ignore-next-line\nexport { DialogTitle };","map":{"version":3,"names":["React","StyleSheet","useInternalTheme","Text","Title","DialogTitle","_ref","children","theme","themeOverrides","style","rest","isV3","colors","fonts","TextComponent","headerTextStyle","color","onSurface","text","headlineSmall","createElement","_extends","variant","accessibilityRole","styles","v3Text","displayName","create","marginTop","marginBottom","marginHorizontal"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\Dialog\\DialogTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Text from '../Typography/Text';\nimport Title from '../Typography/v2/Title';\n\nexport type Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({\n  children,\n  theme: themeOverrides,\n  style,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, colors, fonts } = theme;\n\n  const TextComponent = isV3 ? Text : Title;\n\n  const headerTextStyle = {\n    color: isV3 ? colors.onSurface : colors?.text,\n    ...(isV3 ? fonts.headlineSmall : {}),\n  };\n\n  return (\n    <TextComponent\n      variant=\"headlineSmall\"\n      accessibilityRole=\"header\"\n      style={[styles.text, isV3 && styles.v3Text, headerTextStyle, style]}\n      {...rest}\n    >\n      {children}\n    </TextComponent>\n  );\n};\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16,\n  },\n});\n\nexport default DialogTitle;\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAoBC,UAAU,QAAmB,cAAc;AAE/D,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,wBAAwB;AAc1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGC,IAAA,IAKP;EAAA,IALQ;IACnBC,QAAQ;IACRC,KAAK,EAAEC,cAAc;IACrBC,KAAK;IACL,GAAGC;EACE,CAAC,GAAAL,IAAA;EACN,MAAME,KAAK,GAAGN,gBAAgB,CAACO,cAAc,CAAC;EAC9C,MAAM;IAAEG,IAAI;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGN,KAAK;EAErC,MAAMO,aAAa,GAAGH,IAAI,GAAGT,IAAI,GAAGC,KAAK;EAEzC,MAAMY,eAAe,GAAG;IACtBC,KAAK,EAAEL,IAAI,GAAGC,MAAM,CAACK,SAAS,GAAGL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,IAAI;IAC7C,IAAIP,IAAI,GAAGE,KAAK,CAACM,aAAa,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACEpB,KAAA,CAAAqB,aAAA,CAACN,aAAa,EAAAO,QAAA;IACZC,OAAO,EAAC,eAAe;IACvBC,iBAAiB,EAAC,QAAQ;IAC1Bd,KAAK,EAAE,CAACe,MAAM,CAACN,IAAI,EAAEP,IAAI,IAAIa,MAAM,CAACC,MAAM,EAAEV,eAAe,EAAEN,KAAK;EAAE,GAChEC,IAAI,GAEPJ,QACY,CAAC;AAEpB,CAAC;AAEDF,WAAW,CAACsB,WAAW,GAAG,cAAc;AAExC,MAAMF,MAAM,GAAGxB,UAAU,CAAC2B,MAAM,CAAC;EAC/BT,IAAI,EAAE;IACJU,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE;EACpB,CAAC;EACDL,MAAM,EAAE;IACNG,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAezB,WAAW;;AAE1B;AACA,SAASA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}