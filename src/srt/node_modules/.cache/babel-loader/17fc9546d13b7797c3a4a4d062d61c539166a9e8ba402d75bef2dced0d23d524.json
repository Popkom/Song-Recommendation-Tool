{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport ListSubheader from './ListSubheader';\nimport { useInternalTheme } from '../../core/theming';\n/**\n * A component used to group list items.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Section>\n *     <List.Subheader>Some title</List.Subheader>\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\n *     <List.Item\n *       title=\"Second Item\"\n *       left={() => <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />}\n *     />\n *   </List.Section>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListSection = _ref => {\n  let {\n    children,\n    title,\n    titleStyle,\n    style,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const viewProps = {\n    ...rest,\n    theme\n  };\n  return /*#__PURE__*/React.createElement(View, _extends({}, viewProps, {\n    style: [styles.container, style]\n  }), title ? /*#__PURE__*/React.createElement(ListSubheader, {\n    style: titleStyle,\n    theme: theme\n  }, title) : null, children);\n};\nListSection.displayName = 'List.Section';\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8\n  }\n});\nexport default ListSection;","map":{"version":3,"names":["React","StyleSheet","View","ListSubheader","useInternalTheme","ListSection","_ref","children","title","titleStyle","style","theme","themeOverrides","rest","viewProps","createElement","_extends","styles","container","displayName","create","marginVertical"],"sources":["C:\\Users\\Leonidas\\Desktop\\SongRecommendationTool\\src\\srt\\node_modules\\react-native-paper\\src\\components\\List\\ListSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport ListSubheader from './ListSubheader';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title text for the section.\n   */\n  title?: string;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to group list items.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Section>\n *     <List.Subheader>Some title</List.Subheader>\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\n *     <List.Item\n *       title=\"Second Item\"\n *       left={() => <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />}\n *     />\n *   </List.Section>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListSection = ({\n  children,\n  title,\n  titleStyle,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const viewProps = { ...rest, theme };\n\n  return (\n    <View {...viewProps} style={[styles.container, style]}>\n      {title ? (\n        <ListSubheader style={titleStyle} theme={theme}>\n          {title}\n        </ListSubheader>\n      ) : null}\n      {children}\n    </View>\n  );\n};\n\nListSection.displayName = 'List.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n});\n\nexport default ListSection;\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAEEC,UAAU,EAEVC,IAAI,QAEC,cAAc;AAErB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,oBAAoB;AAuBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGC,IAAA,IAOP;EAAA,IAPQ;IACnBC,QAAQ;IACRC,KAAK;IACLC,UAAU;IACVC,KAAK;IACLC,KAAK,EAAEC,cAAc;IACrB,GAAGC;EACE,CAAC,GAAAP,IAAA;EACN,MAAMK,KAAK,GAAGP,gBAAgB,CAACQ,cAAc,CAAC;EAC9C,MAAME,SAAS,GAAG;IAAE,GAAGD,IAAI;IAAEF;EAAM,CAAC;EAEpC,oBACEX,KAAA,CAAAe,aAAA,CAACb,IAAI,EAAAc,QAAA,KAAKF,SAAS;IAAEJ,KAAK,EAAE,CAACO,MAAM,CAACC,SAAS,EAAER,KAAK;EAAE,IACnDF,KAAK,gBACJR,KAAA,CAAAe,aAAA,CAACZ,aAAa;IAACO,KAAK,EAAED,UAAW;IAACE,KAAK,EAAEA;EAAM,GAC5CH,KACY,CAAC,GACd,IAAI,EACPD,QACG,CAAC;AAEX,CAAC;AAEDF,WAAW,CAACc,WAAW,GAAG,cAAc;AAExC,MAAMF,MAAM,GAAGhB,UAAU,CAACmB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}